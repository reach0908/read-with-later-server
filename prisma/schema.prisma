// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  name       String?
  provider   String
  providerId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  refreshTokens RefreshToken[]

  @@unique([provider, providerId])
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  isValid   Boolean  @default(true)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
}

model Article {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  sourceUrl     String   @unique
  status        ArticleStatus @default(PENDING)

  title         String?
  author        String?
  excerpt       String?
  content       String?  @db.Text
  textContent   String?  @db.Text
  thumbnailUrl  String?
  failureReason String?
  scrapedWith   ScraperType?
}

enum ArticleStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

enum ScraperType {
  LIGHTWEIGHT
  HEAVYWEIGHT
}
